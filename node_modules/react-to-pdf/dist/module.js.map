{"mappings":"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","sources":["src/index.ts","src/converter.ts","src/constants.ts","src/utils.ts"],"sourcesContent":["import { useRef, useCallback } from \"react\";\nimport html2canvas from \"html2canvas\";\n\nimport Converter from \"./converter\";\nimport { Options, TargetElementFinder, UsePDFResult } from \"./types\";\nimport { buildConvertOptions } from \"./utils\";\nimport jsPDF from \"jspdf\";\nexport { Resolution, Margin } from \"./constants\";\nexport type { Options };\n\nconst getTargetElement = (\n  targetRefOrFunction: TargetElementFinder\n): HTMLElement | null | undefined => {\n  if (typeof targetRefOrFunction === \"function\") {\n    return targetRefOrFunction();\n  }\n  return targetRefOrFunction?.current;\n};\n\nexport const usePDF = (usePDFoptions?: Options): UsePDFResult => {\n  const targetRef = useRef();\n  const toPDF = useCallback(\n    (toPDFoptions?: Options): Promise<InstanceType<typeof jsPDF>> => {\n      return generatePDF(targetRef, usePDFoptions ?? toPDFoptions);\n    },\n    [targetRef, usePDFoptions]\n  );\n  return { targetRef, toPDF };\n};\n\nconst generatePDF = async (\n  targetRefOrFunction: TargetElementFinder,\n  customOptions?: Options\n): Promise<InstanceType<typeof jsPDF>> => {\n  const options = buildConvertOptions(customOptions);\n  const targetElement = getTargetElement(targetRefOrFunction);\n  if (!targetElement) {\n    console.error(\"Unable to get the target element.\");\n    return;\n  }\n  const canvas = await html2canvas(targetElement, {\n    useCORS: options.canvas.useCORS,\n    logging: options.canvas.logging,\n    scale: options.resolution,\n    ...options.overrides?.canvas,\n  });\n  const converter = new Converter(canvas, options);\n  const pdf = converter.convert();\n  switch (options.method) {\n    case \"build\":\n      return pdf;\n    case \"open\": {\n      window.open(pdf.output(\"bloburl\"), \"_blank\");\n      return pdf;\n    }\n    case \"save\":\n    default: {\n      const pdfFilename = options.filename ?? `${new Date().getTime()}.pdf`;\n      await pdf.save(pdfFilename, { returnPromise: true });\n      return pdf;\n    }\n  }\n};\n\nexport default generatePDF;\n","import jsPDF from \"jspdf\";\nimport { MM_TO_PX } from \"./constants\";\nimport { ConversionOptions, Options } from \"./types\";\n\nexport default class Converter {\n  pdf: InstanceType<typeof jsPDF>;\n  canvas: HTMLCanvasElement;\n  options: Options;\n  constructor(canvas: HTMLCanvasElement, options: ConversionOptions) {\n    this.canvas = canvas;\n    this.options = options;\n    this.pdf = new jsPDF({\n      format: this.options.page.format,\n      orientation: this.options.page.orientation,\n      ...this.options.overrides?.pdf,\n      unit: \"mm\",\n    });\n  }\n  getMarginTopMM() {\n    const margin =\n      typeof this.options.page.margin === \"object\"\n        ? this.options.page.margin.top\n        : this.options.page.margin;\n    return Number(margin);\n  }\n  getMarginLeftMM() {\n    const margin =\n      typeof this.options.page.margin === \"object\"\n        ? this.options.page.margin.left\n        : this.options.page.margin;\n    return Number(margin);\n  }\n  getMarginRightMM() {\n    const margin =\n      typeof this.options.page.margin === \"object\"\n        ? this.options.page.margin.right\n        : this.options.page.margin;\n    return Number(margin);\n  }\n  getMarginBottomMM() {\n    const margin =\n      typeof this.options.page.margin === \"object\"\n        ? this.options.page.margin.bottom\n        : this.options.page.margin;\n    return Number(margin);\n  }\n  getMarginTop() {\n    return this.getMarginTopMM() * MM_TO_PX;\n  }\n  getMarginBottom() {\n    return this.getMarginBottomMM() * MM_TO_PX;\n  }\n  getMarginLeft() {\n    return this.getMarginLeftMM() * MM_TO_PX;\n  }\n  getMarginRight() {\n    return this.getMarginRightMM() * MM_TO_PX;\n  }\n  getScale() {\n    return this.options.resolution;\n  }\n  getPageHeight() {\n    return this.getPageHeightMM() * MM_TO_PX;\n  }\n  getPageHeightMM() {\n    return this.pdf.internal.pageSize.height;\n  }\n  getPageWidthMM() {\n    return this.pdf.internal.pageSize.width;\n  }\n  getPageWidth() {\n    return this.getPageWidthMM() * MM_TO_PX;\n  }\n  getOriginalCanvasWidth() {\n    return this.canvas.width / this.getScale();\n  }\n  getOriginalCanvasHeight() {\n    return this.canvas.height / this.getScale();\n  }\n  getCanvasPageAvailableHeight() {\n    return (\n      this.getPageAvailableHeight() *\n      this.getScale() *\n      this.getHorizontalFitFactor()\n    );\n  }\n  getPageAvailableWidth() {\n    return this.getPageWidth() - (this.getMarginLeft() + this.getMarginRight());\n  }\n  getPageAvailableHeight() {\n    return (\n      this.getPageHeight() - (this.getMarginTop() + this.getMarginBottom())\n    );\n  }\n  getPageAvailableWidthMM() {\n    return this.getPageAvailableWidth() / MM_TO_PX;\n  }\n  getPageAvailableHeightMM() {\n    return this.getPageAvailableHeight() / MM_TO_PX;\n  }\n  getNumberPages() {\n    return Math.ceil(this.canvas.height / this.getCanvasPageAvailableHeight());\n  }\n  getHorizontalFitFactor() {\n    if (this.getPageAvailableWidth() < this.getOriginalCanvasWidth()) {\n      return this.getOriginalCanvasWidth() / this.getPageAvailableWidth();\n    }\n    return 1;\n  }\n  getCanvasOffsetY(pageNumber: number) {\n    return this.getCanvasPageAvailableHeight() * (pageNumber - 1);\n  }\n  getCanvasHeightLeft(pageNumber: number) {\n    return this.canvas.height - this.getCanvasOffsetY(pageNumber);\n  }\n  getCanvasPageHeight(pageNumber: number) {\n    if (this.canvas.height < this.getCanvasPageAvailableHeight()) {\n      return this.canvas.height;\n    }\n    const canvasHeightPending = this.getCanvasHeightLeft(pageNumber);\n    return canvasHeightPending < this.getCanvasPageAvailableHeight()\n      ? canvasHeightPending\n      : this.getCanvasPageAvailableHeight();\n  }\n  getCanvasPageWidth() {\n    return this.canvas.width;\n  }\n  createCanvasPage(pageNumber: number): HTMLCanvasElement {\n    const canvasPageWidth = this.getCanvasPageWidth();\n    const canvasPageHeight = this.getCanvasPageHeight(pageNumber);\n    const canvasPage = document.createElement(\"canvas\");\n    canvasPage.setAttribute(\"width\", String(canvasPageWidth));\n    canvasPage.setAttribute(\"height\", String(canvasPageHeight));\n    const ctx = canvasPage.getContext(\"2d\");\n    ctx.drawImage(\n      this.canvas,\n      0,\n      this.getCanvasOffsetY(pageNumber),\n      this.canvas.width,\n      canvasPageHeight,\n      0,\n      0,\n      this.canvas.width,\n      canvasPageHeight\n    );\n    return canvasPage;\n  }\n  convert(): InstanceType<typeof jsPDF> {\n    let pageNumber = 1;\n    const numberPages = this.getNumberPages();\n    while (pageNumber <= numberPages) {\n      if (pageNumber > 1) {\n        this.pdf.addPage(\n          this.options.page.format,\n          this.options.page.orientation\n        );\n      }\n      const canvasPage = this.createCanvasPage(pageNumber);\n      const pageImageDataURL = canvasPage.toDataURL(\n        this.options.canvas.mimeType,\n        this.options.canvas.qualityRatio\n      );\n      this.pdf.setPage(pageNumber);\n      this.pdf.addImage({\n        imageData: pageImageDataURL,\n        width:\n          canvasPage.width /\n          (this.getScale() * MM_TO_PX * this.getHorizontalFitFactor()),\n        height:\n          canvasPage.height /\n          (this.getScale() * MM_TO_PX * this.getHorizontalFitFactor()),\n        x: this.getMarginLeftMM(),\n        y: this.getMarginTopMM(),\n      });\n      pageNumber += 1;\n    }\n    return this.pdf;\n  }\n}\n","import { ConversionOptions } from \"./types\";\n\nexport const MM_TO_PX = 3.77952755906;\n\nexport enum Resolution {\n  LOW = 1,\n  NORMAL = 2,\n  MEDIUM = 3,\n  HIGH = 7,\n  EXTREME = 12,\n}\n\nexport enum Margin {\n  NONE = 0,\n  SMALL = 5,\n  MEDIUM = 10,\n  LARGE = 25,\n}\n\nexport const DEFAULT_OPTIONS: Readonly<ConversionOptions> = {\n  method: \"save\",\n  resolution: Resolution.MEDIUM,\n  page: {\n    margin: Margin.NONE,\n    format: \"A4\",\n    orientation: \"portrait\",\n  },\n  canvas: {\n    mimeType: \"image/jpeg\",\n    qualityRatio: 1,\n    useCORS: true,\n    logging: false,\n  },\n  overrides: {},\n};\n","import { DEFAULT_OPTIONS } from \"./constants\";\nimport { ConversionOptions, Options } from \"./types\";\n\nexport const buildConvertOptions = (options?: Options): ConversionOptions => {\n  if (!options) {\n    return DEFAULT_OPTIONS;\n  }\n  return {\n    ...DEFAULT_OPTIONS,\n    ...options,\n    canvas: { ...DEFAULT_OPTIONS.canvas, ...options.canvas },\n    page: { ...DEFAULT_OPTIONS.page, ...options.page },\n  };\n};\n"],"names":[],"version":3,"file":"module.js.map"}